{"version":3,"sources":["Canvas.tsx","App.tsx","index.tsx"],"names":["Canvas","startX","startY","imageSrc","watermarkSrc","watermarkX","watermarkY","setWatermarkX","setWatermarkY","props","canvasRef","useRef","useState","isDragging","setDragging","canvasImageLink","setCanvasImageLink","width","height","waterMarkData","setWaterMarkData","drawImage","offsetX","offsetY","clearCanvas","canvas","current","context","getContext","image","Image","src","onload","window","requestAnimationFrame","clearRect","String","toDataURL","complete","useEffect","handleMouseUp","className","onMouseUp","onMouseOut","onMouseMove","e","mouseX","nativeEvent","clientLeft","mouseY","clientTop","onMouseDown","isDown","x","y","isTarget","hitBox","ref","fill","viewBox","xmlns","d","download","href","UploadButton","onChange","text","type","NumberInput","App","file","setFile","watermark","setWatermark","event","a","currentTarget","files","length","URL","createObjectURL","value","parseInt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeec4247.chunk.js","sourcesContent":["import React, { HTMLAttributes, useRef, useEffect, useState } from 'react'\n\n\ninterface CanvasProps extends HTMLAttributes<HTMLCanvasElement> {\n  imageSrc?: string,\n  watermarkSrc?: string,\n  watermarkX?: number,\n  watermarkY?: number,\n  setWatermarkX: (value: number) => void,\n  setWatermarkY: (value: number) => void\n}\n\nconst Canvas = ({ imageSrc, watermarkSrc, watermarkX = 0, watermarkY = 0, setWatermarkX, setWatermarkY, ...props }: CanvasProps) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null)\n  const [isDragging, setDragging] = useState(false)\n  const [canvasImageLink, setCanvasImageLink] = useState('')\n  const [waterMarkData, setWaterMarkData] = useState({\n    width: 0,\n    height: 0\n  })\n  let startX: number\n  let startY: number\n  const drawImage = (imageSrc?: string, offsetX: number = 0, offsetY: number = 0, clearCanvas: boolean = false) => {\n    const canvas = canvasRef.current\n    if (canvas && imageSrc) {\n      const context = canvas.getContext('2d')\n      if (context) {\n        const image = new Image();\n        image.src = imageSrc;\n        image.onload = () => {\n          if (clearCanvas) {\n            window.requestAnimationFrame(() => {\n              context.clearRect(0, 0, canvas.width, canvas.height);\n              canvas.width = image.width;\n              canvas.height = image.height;\n            })\n          } else {\n            if (waterMarkData.width !== image.width || waterMarkData.height !== image.height) {\n              setWaterMarkData({\n                width: image.width,\n                height: image.height\n              })\n            }\n          }\n          window.requestAnimationFrame(() => {\n            context.drawImage(image, offsetX, offsetY);\n          })\n          setCanvasImageLink(String(canvasRef.current?.toDataURL('image/png')))\n        }\n        if (image.complete) {\n          if (clearCanvas) {\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            canvas.width = image.width;\n            canvas.height = image.height;\n          } else {\n            if (waterMarkData.width !== image.width || waterMarkData.height !== image.height) {\n              setWaterMarkData({\n                width: image.width,\n                height: image.height\n              })\n            }\n          }\n          window.requestAnimationFrame(() => {\n            context.drawImage(image, offsetX, offsetY);\n          })\n          setCanvasImageLink(String(canvasRef.current?.toDataURL('image/png')))\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    drawImage(imageSrc, 0, 0, true);\n    drawImage(watermarkSrc, watermarkX, watermarkY);\n  }, [imageSrc, watermarkSrc, watermarkX, watermarkY])\n\n  const hitBox = (x: number, y: number): boolean => {\n    let isTarget = false;\n    if (x >= watermarkX && x <= watermarkX + waterMarkData.width && y >= watermarkY && y <= watermarkY + waterMarkData.height) {\n      isTarget = true;\n    }\n    return isTarget;\n  }\n\n  const handleMouseDown = (e: React.MouseEvent) => {\n    const canvas = canvasRef.current\n    if (canvas) {\n      startX = e.nativeEvent.offsetX - canvas.clientLeft;\n      startY = e.nativeEvent.offsetY - canvas.clientTop;\n      const isDown = hitBox(startX, startY);\n      if (isDragging !== isDown) {\n        setDragging(isDown)\n      }\n    }\n  }\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isDragging) return;\n    const canvas = canvasRef.current\n    if (canvas) {\n      const mouseX = e.nativeEvent.offsetX - canvas.clientLeft;\n      const mouseY = e.nativeEvent.offsetY - canvas.clientTop;\n      startX = mouseX;\n      startY = mouseY;\n      setWatermarkX(startX)\n      setWatermarkY(startY)\n    }\n  }\n\n  const handleMouseUp = () => {\n    if (isDragging) {\n      setDragging(false)\n    }\n  }\n  const handleMouseOut = () => {\n    handleMouseUp()\n  }\n\n  return (\n    <div className='text-center'>\n      <canvas\n        onMouseUp={handleMouseUp}\n        onMouseOut={handleMouseOut}\n        onMouseMove={handleMouseMove}\n        onMouseDown={handleMouseDown} className='m-auto' ref={canvasRef} {...props} />\n      <div className=\"overflow-hidden relative inline-block\">\n        <button className=\"bg-indigo-400 hover:bg-indigo-500 text-white font-bold py-2 px-4 w-full inline-flex items-center\">\n          <svg className='transform rotate-180' fill=\"#FFF\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\" />\n          </svg>\n          <span className=\"ml-2\">Download Image</span>\n        </button>\n        <a className='cursor-pointer absolute block opacity-0 top-0 left-0 bottom-0 right-0 w-full'\n          download='image.png'\n          href={canvasImageLink} />\n      </div>\n    </div>\n  )\n}\n\nexport default Canvas\n","import React, { useState, HTMLAttributes } from 'react';\nimport './tailwind.output.css';\nimport Canvas from './Canvas'\n\ninterface UploadButtonProps extends HTMLAttributes<HTMLInputElement> {\n  text: string\n}\n\nconst UploadButton = ({ onChange, text }: UploadButtonProps) => {\n  return (\n    <div className=\"overflow-hidden relative\">\n\n      <button className=\"bg-indigo-400 hover:bg-indigo-500 text-white font-bold py-2 px-4 w-full inline-flex items-center\">\n        <svg fill=\"#FFF\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          <path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\" />\n        </svg>\n        <span className=\"ml-2\">{text}</span>\n      </button>\n      <input className=\"cursor-pointer absolute block opacity-0 top-0 left-0 bottom-0 right-0 w-full\" type=\"file\" onChange={onChange} />\n    </div>\n  )\n}\n\nconst NumberInput = (props: React.InputHTMLAttributes<HTMLInputElement>) => {\n  return (\n    <input\n      {...props}\n      className=\"shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n      type='number'\n    />\n  )\n}\n\nfunction App() {\n  const [file, setFile] = useState('')\n  const [watermark, setWatermark] = useState('')\n  const [watermarkX, setWatermarkX] = useState(0)\n  const [watermarkY, setWatermarkY] = useState(0)\n\n  return (\n    <div className='text-center px-5'>\n      <div className='grid gap-3 grid-cols-2'>\n        <UploadButton text='Choose a main image:' onChange={async (event) => {\n          if (event.currentTarget.files?.length) {\n            setFile(URL.createObjectURL(event.currentTarget.files[0]))\n          }\n        }} />\n\n        <UploadButton text='Choose a watermark image:' onChange={async (event) => {\n          if (event.currentTarget.files?.length) {\n            setWatermark(URL.createObjectURL(event.currentTarget.files[0]))\n          }\n        }} />\n      </div>\n      <label>Watermark X position</label>\n      <NumberInput value={watermarkX} onChange={(e) => setWatermarkX(parseInt(e.currentTarget.value))} />\n      <label>Watermark Y position</label>\n      <NumberInput value={watermarkY} onChange={(e) => setWatermarkY(parseInt(e.currentTarget.value))} />\n      <Canvas setWatermarkX={setWatermarkX} setWatermarkY={setWatermarkY} watermarkX={watermarkX} watermarkY={watermarkY} imageSrc={file} watermarkSrc={watermark} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}